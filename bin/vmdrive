#!/usr/bin/env ruby
#encoding: utf-8

require "vmopt/disk_operation"
require "optparse"
require "json"
option = {}
option_parser = OptionParser.new do | opts |
  opts.banner = %q/
  Help: 
    Description:
      vmdrive tool, use for hard disk drive operation.
    function:
      1.get_disk_information        
      2.get_partition_information
      3.unformat_disk
      4.chk_format_disk
      5.format_disk_by_index
    Example:
      vmdrive --query  harddisk    
      vmdrive --query  partition  
      vmdrive --query  unformated_disk
      vmdrive --format unformated_disk
      vmdrive --format [diskindex]
  /
  
  opts.on('-q queryopt', '--query  queryopt', 'Query harddisk information') do |value|
    option[:queryopt] = value
    option[:cmd] = "query"
  end

  opts.on('-f disk', '--format disk', 'Specify harddrive index to format') do |value|
    option[:disk] = value
    option[:cmd] = "format"
  end
end.parse!

   resultok = {"status"=>"0"}
   resultfail = {"status"=>"-1"}
   data_value=[]
   $disk = Vmopt::DiskOperation.new

   if option[:cmd] == "query"
      if option[:queryopt] == 'harddisk'
        data_value = $disk.get_disk_information
      elsif option[:queryopt] == 'partition'
        data_value = $disk.get_partition_information
      elsif option[:queryopt] == 'unformated_disk'
        data_value = $disk.unformat_disk
      else 
        puts "Please check the params..."
      end

   elsif option[:cmd] == "format" 
      if option[:disk] == 'unformated_disk'
        ret = $disk.chk_format_disk
        data_value<<"format disk success"
      elsif option[:disk] =~ /\d/
        ret = $disk.format_disk_by_index(option[:disk].to_i)
        data_value<<"format disk success"
      else 
        puts "Please check the params..."
      end
   else
      system("vmdrive -help") 
   end
  
  if ret==false
    resultfail["data"]="format disk fail"
    retjson = JSON.generate resultfail
  else
    resultok["data"]=data_value
    retjson = JSON.generate resultok
  end
   
puts retjson unless option[:cmd].nil?



