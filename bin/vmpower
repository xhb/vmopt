#!/usr/bin/env ruby
#encoding: utf-8
require "vmopt/power_operation"
require "optparse"
require "json"

option = {}
option_parser = OptionParser.new do | opts |
  opts.banner = %q/
  Help: 
    Description:
      vmpower tool, use for system power management.
    function:
      1.shutdown        
      2.reboot
      3.logoff
      4.lock_user
      5.sleep

    Example:
      vmpower --do  shutdown    
      vmpower --do  reboot  
      vmpower --do  logoff
      vmpower --do  lock_user
      vmpower --do  sleep
  /
  opts.on('-d popt', '--do  popt', 'System  power operation') do |value|
    option[:popt] = value
    option[:cmd] = "do"
  end

end.parse!
  
  resultok = {"status"=>"0"}
  resultfail = {"status"=>"-1"}
  data_value=[]
  $pow = Vmopt::PowerOperation.new()

   if option[:cmd] == "do"
      if option[:popt] == "shutdown"
        ret = $pow.shutdown
        data_value << "system is going to shutdown"
      elsif option[:popt] == "reboot"
        ret = $pow.reboot
        data_value << "system is going to reboot"
      elsif option[:popt] == "logoff"
        ret = $pow.logoff
        data_value << "system is going to logoff"
      elsif option[:popt] == "lock_user"
        ret = $pow.lock_user
        data_value << "system is going to lock_user"
      elsif option[:popt] == "sleep"
      	ret = $pow.sleep
        data_value << "system is going to sleep"
      else 
        puts "Please check the params..."
      end
   else
   	  system("vmpower -help");
   end

   if ret==true
     resultok["data"]=data_value
     retjson = JSON.generate resultok
   else
     resultfail["data"]="power operation fail"
     retjson = JSON.generate resultfail  
   end
   puts retjson unless option[:cmd].nil?


